//~ http://codeforces.com/gym/101806/problem/Y

#include <bits/stdc++.h>

using namespace std;
#define MAXN 51622
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define fast ios_base::sync_with_stdio(0); cin.tie(0)
typedef long long int ll;
typedef long double ld;
typedef pair<int, int> pii;

int nxt[31][50]={
	{0},
	{1, 8, 12, 15, 18, 22, 30, -1, -1, -1, -1, -1, -1},
	{2, 1, 7,11,16,20,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{3,2, 1, 7,11,16,20,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{4, 3,2, 1, 7,11,16,20,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{5, 4, 3,2, 1, 7,11,16,20,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{6,9,13,15,17,21,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{7,11,16,20,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{8,12,15,18,22,30,-1,-1,-1,-1,-1,-1},
	{9,13,15,17,21,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{10, 6, 5, 4, 3,2, 1, 7,11,16,20,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{11,16,20,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{12,15, 18,22,30,-1,-1,-1,-1,-1,-1},
	{13,15,17,21,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{14, 10, 6, 5, 4, 3,2, 1, 7,11,16,20,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{15, 18,22,30,-1,-1,-1,-1,-1,-1},
	{16,20,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{17,21,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{18, 22,30,-1,-1,-1,-1,-1,-1},
	{19, 14, 10, 6, 5, 4, 3,2, 1, 7,11,16,20,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{20,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{21,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{22, 30,-1,-1,-1,-1,-1,-1},
	{23, 19, 14, 10, 6, 5, 4, 3,2, 1, 7,11,16,20,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{26,27,28,30,-1,-1,-1,-1,-1,-1},
	{27,28,30,-1,-1,-1,-1,-1,-1},
	{28,30,-1,-1,-1,-1,-1,-1},
	{29,23, 19, 14, 10, 6, 5, 4, 3,2, 1, 7,11,16,20,24,25,26,27,28,30,-1,-1,-1,-1,-1,-1},
	{30,-1,-1,-1,-1,-1,-1},
};

string board[33]={
{"..----..----..----..----..----.."},
{"..    ..    ..    ..    ..    .."},
{"| \\                          / |"},
{"|  \\                        /  |"},
{"|   \\                      /   |"},
{"|    ..                  ..    |"},
{"..   ..                  ..   .."},
{"..     \\                /     .."},
{"|       \\              /       |"},
{"|        \\            /        |"},
{"|         ..        ..         |"},
{"|         ..        ..         |"},
{"..          \\      /          .."},
{"..           \\    /           .."},
{"|             \\  /             |"},
{"|              ..              |"},
{"|              ..              |"},
{"|             /  \\             |"},
{"..           /    \\           .."},
{"..          /      \\          .."},
{"|         ..        ..         |"},
{"|         ..        ..         |"},
{"|        /            \\        |"},
{"|       /              \\       |"},
{"..     /                \\     .."},
{"..   ..                  ..   .."},
{"|    ..                  ..    |"},
{"|   /                      \\   |"},
{"|  /                        \\  |"},
{"| /                          \\ |"},
{"..    ..    ..    ..    ..    .."},
{"..----..----..----..----..----.."},

};

int pos[31][2] = {
	{-1, -1},
	{0, 0},
	{0, 6},
	{0, 12},
	{0, 18},
	{0, 24},
	{0, 30},
	{6, 0},
	{5, 5},
	{5, 25},
	{6, 30},
	{12, 0},
	{10, 10},
	{10, 20},
	{12, 30},
	{15, 15},
	{18, 0},
	{20, 10},
	{20, 20},
	{18, 30},
	{24, 0},
	{25, 5},
	{25, 25},
	{24, 30},
	{30, 0},
	{30, 6},
	{30, 12},
	{30, 18},
	{30, 24},
	{30, 30},
	{30, 30},
};

bool fugiu[300];
int at[300];

int getLen(string &s){
	int ans = 0;
	for (int i = 0; i < s.size(); i++)
		if(s[i] == 'F') ans++;
	return ans ? ans : 5;
}

bool team1(char c){
	return c >= 'A' && c <= 'D';
}

bool team2(char c){
	return !team1(c);
}

void move(char tok, int len){
	//~ printf("vou andar %d com %c\n", len, tok);
	if(nxt[at[tok]][len] == -1){
		if(team1(tok)){
			for (char i = 'A'; i <= 'D'; i++)
				if(at[i] == at[tok] && at[tok] != 29 && i != tok){
					fugiu[i] = true;
					at[i] = nxt[at[i]][len];
				}
			at[tok] = nxt[at[tok]][len];
			fugiu[tok] = true;
		}else{
			for (char i = 'a'; i <= 'd'; i++)
				if(at[i] == at[tok] && at[tok] != 29 && i != tok){
					fugiu[i] = true;
					at[i] = nxt[at[i]][len];
				}
			at[tok] = nxt[at[tok]][len];
			fugiu[tok] = true;
		}
		return;
	}
	
	int nxtPos = nxt[at[tok]][len];
	if(team1(tok)){
		for (char i = 'a'; i <= 'd'; i++)
			if(at[i] == nxtPos)
				at[i] = 29;
		
		for (char i = 'A'; i <= 'D'; i++)
			if(at[i] == at[tok] && at[tok] != 29 && i != tok)
				at[i] = nxtPos;
		at[tok] = nxtPos;
	}else{
		for (char i = 'A'; i <= 'D'; i++)
			if(at[i] == nxtPos)
				at[i] = 29;
		
		for (char i = 'a'; i <= 'd'; i++)
			if(at[i] == at[tok] && at[tok] != 29 && i != tok)
				at[i] = nxtPos;
		at[tok] = nxtPos;
	}
}

int main(){
	for (int i = 0; i <= 300; i++){
		at[i] = 29;
		fugiu[i] = false;
	}
	
	char token;
	string yut;
	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		cin >> token >> yut;
		if(fugiu[token]) continue;
		move(token, getLen(yut));
		//~ for (char i = 'A'; i <= 'D'; i++)
			//~ printf("%c esta em %d\n", i, at[i]);
		//~ for (char i = 'a'; i <= 'd'; i++)
			//~ printf("%c esta em %d\n", i, at[i]);
		//~ puts("");
	}
	
	for (char i = 'A'; i <= 'D'; i++){
		if(at[i] == -1 || at[i] == 29) continue;//CUIDADO COM O 30
		if(i == 'A') board[pos[at[i]][0]][pos[at[i]][1]] = 'A';
		if(i == 'B') board[pos[at[i]][0]][pos[at[i]][1]+1] = 'B';
		if(i == 'C') board[pos[at[i]][0]+1][pos[at[i]][1]] = 'C';
		if(i == 'D') board[pos[at[i]][0]+1][pos[at[i]][1]+1] = 'D';
	}
	for (char i = 'a'; i <= 'd'; i++){
		if(at[i] == -1 || at[i] == 29) continue;//CUIDADO COM O 30
		if(i == 'a') board[pos[at[i]][0]][pos[at[i]][1]] = 'a';
		if(i == 'b') board[pos[at[i]][0]][pos[at[i]][1]+1] = 'b';
		if(i == 'c') board[pos[at[i]][0]+1][pos[at[i]][1]] = 'c';
		if(i == 'd') board[pos[at[i]][0]+1][pos[at[i]][1]+1] = 'd';
	}
	
	for (int i = 0; i < 32; i++)
		cout << board[i] << "\n";
	
	//~ for (int i = 0; i < 32; i++)
	//~ {
		//~ for (int j = 0; j < 32; j++)
		//~ {
			//~ cout << board[i][j] << " ";
		//~ }
		//~ cout << endl;
	//~ }
	
	//~ cout << ss << endl;
	
	
	
	return 0;
}
